# An item-hierarchy based navigation paradigm.
# We query the site root item and its children to make a simple top level navigation.

query Navigation($rootPath: String!) {
  # We're using GraphQL _aliasing_ to rename the top level `item` result to `nav` in the json
  # this affects the shape of the prop we get from the query (data in .nav instead of .item)
  nav: item(path: $rootPath) {
    ...NavigationData
    children(requirePresentation: true) {
      ...NavigationData
    }
  }
}

# We're using a GraphQL _fragment_ to avoid needing to restate
# the fields we need twice, once for the parent and once for the children.
# Think of it as a 'field include' to reduce query noise
fragment NavigationData on Item {
  # In a multilingual site, you'd want to allow language embedding in routes
  # however, our simple site's router doesn't understand how to route urls like /en/route
  # so we're going with no language in the URL
  url(options: { disableLanguageEmbedding: true })
  displayName
}